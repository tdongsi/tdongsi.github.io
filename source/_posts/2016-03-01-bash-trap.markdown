---
layout: post
title: "Bash trap"
date: 2016-03-01 00:07:48 -0800
comments: true
categories: 
- Bash
- Vertica
---

There is a simple idiom to ensure your bash scripts to always do proper cleanup operations before exiting, even when something goes wrong during execution.

``` bash
# Setup trap to cleanup before exiting script
function cleanup {
    echo "Removing temp files..."
    if [[ -f $CMD_TMPFILE ]] ; then
        rm $CMD_TMPFILE
    fi
    if [[ -f $LOG_TMPFILE ]] ; then
        rm $LOG_TMPFILE
    fi
}
trap cleanup EXIT
```

For example, in Vertica, you want to run 

Note that many examples for "trap" use `trap cleanup INT TERM EXIT` for cleanup tasks, i.e., not only EXIT signal but also INT and TERM signals.
I believe applies whether the script finished normally or it finished because it received SIGINT or SIGTERM. An experiment also confirms my belief:

``` bash
$ cat ./trap-exit
#!/bin/bash
trap 'echo TRAP' EXIT
sleep 3
$ ./trap-exit & sleep 1; kill -INT %1
[1] 759
TRAP
[1]+  Interrupt               ./trap-exit
$ ./trap-exit & sleep 1; kill -TERM %1
[1] 773
TRAP
[1]+  Terminated              ./trap-exit
```

### References

1. [Signals and Traps](http://tldp.org/LDP/Bash-Beginners-Guide/html/chap_12.html)