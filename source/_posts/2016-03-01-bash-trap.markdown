---
layout: post
title: "Bash trap"
date: 2016-03-01 00:07:48 -0800
comments: true
categories: 
- Bash
- Vertica
---

There is a simple idiom to ensure your bash scripts to always do proper cleanup operations before exiting, even when something goes wrong during execution.

``` bash DO THIS
# Setup trap to cleanup before exiting script
function cleanup {
    echo "Removing temp files..."
    if [[ -f $CMD_TMPFILE ]] ; then
        rm $CMD_TMPFILE
    fi
    if [[ -f $LOG_TMPFILE ]] ; then
        rm $LOG_TMPFILE
    fi
}
trap cleanup EXIT

# Setup

# Thousand lines of code here
```

``` bash DON'T DO THIS

# Setup

# Thousand lines of code here

echo "Removing temp files..."
if [[ -f $CMD_TMPFILE ]] ; then
    rm $CMD_TMPFILE
fi
if [[ -f $LOG_TMPFILE ]] ; then
    rm $LOG_TMPFILE
fi
```

For example, in Vertica, you want to run 

### What signals to trap

Note that many examples for "trap" use `trap cleanup INT TERM EXIT` for cleanup tasks, i.e., trapping not only EXIT signal but also INT and TERM signals.
I believe applies whether the script finished normally or it finished because it received SIGINT or SIGTERM. An experiment also confirms my belief:

``` bash
$ cat ./trap-exit
#!/bin/bash
trap 'echo TRAP' EXIT
sleep 3
$ ./trap-exit & sleep 1; kill -INT %1
[1] 759
TRAP
[1]+  Interrupt               ./trap-exit
$ ./trap-exit & sleep 1; kill -TERM %1
[1] 773
TRAP
[1]+  Terminated              ./trap-exit
```

http://stackoverflow.com/questions/8122779/is-it-necessary-to-specify-traps-other-than-exit

What you have described, I believe, would actually execute cmd twice. Once for the signal (for example SIGTERM) and once more on exit (trap 0).

To make sure the EXIT signal handler will not be executed twice (which is almost always not what you want) it should always set to be ignored or reset within the definition of the EXIT signal handler itself.

### References

1. [Signals and Traps](http://tldp.org/LDP/Bash-Beginners-Guide/html/chap_12.html)
1. http://redsymbol.net/articles/bash-exit-traps/
1. http://www.alittlemadness.com/2012/06/25/bash-tip-reliable-clean-up-with-trap/


